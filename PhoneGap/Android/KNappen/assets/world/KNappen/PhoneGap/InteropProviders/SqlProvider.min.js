var PhoneGap,sqlProvider;(function(n){(function(n){var t=function(){function n(){this.dbVersion="1"}return n.prototype.Load=function(){log.debug("SqlProvider","Load()"),log.debug("SQL","Opening database KNAppenDB"),this.db=window.openDatabase("KNAppenDB","","KNAppenDB",2048e4),this.updateDb()},n.prototype.Init=function(){log.debug("SqlProvider","Init()");var n=this;phoneGapInterop.onInteropCommand.addHandler(function(t,i,r){n.processInteropCommand(t,i,r)},"SqlProvider")},n.prototype.processInteropCommand=function(n,t,i){if(log.debug("SqlProvider","processInteropCommand: target: "+n+", action: "+t),i&&$.each(i,function(n,t){log.debug("SqlProvider","processInteropCommand: param: "+n+", value: "+t)}),n.toLowerCase()==="sql"){var r=i.table,u=i.key,f=i.value,e=i.meta;t==="set"&&this.sqlSettingsSet(r,u,f,e),t==="remove"&&this.sqlSettingsRemove(r,u),t==="read"&&this.sqlSettingsRead(r)}},n.prototype.updateDb=function(){var n=this,t;console.log("Current DB version: "+n.db.version),n.db.version!=n.dbVersion&&(t="",n.db.version&&n.db.version!=""||(console.log("SQLite Table doesn't exist, creating."),n.db.transaction(function(n){t="CREATE TABLE IF NOT EXISTS settings (key TEXT NOT NULL PRIMARY KEY, value TEXT, meta TEXT)",log.debug("SqlProvider","SQL: "+t),n.executeSql(t)},function(n){console.log('SQL CREATE: "'+t+'": Error: '+n.code+": "+n.message)},function(){console.log("SQL CREATE Success: "+t)}),n.db.changeVersion(n.db.version,n.dbVersion)),n.db.version=="1.0"&&(console.log("SQLite Table upgrade from 1.0 (beta-testers)"),n.db.transaction(function(n){t="ALTER TABLE settings ADD COLUMN meta TEXT",log.debug("SqlProvider","SQL: "+t),n.executeSql(t)},function(n){console.log('SQL ALTER: "'+t+'": Error: '+n.code+": "+n.message)},function(){console.log("SQL ALTER Success: "+t)}),n.db.changeVersion(n.db.version,"1")),n.db.version!=n.dbVersion?log.debug("SqlProvider","ERROR: Unsuccessful upgrade of SQLite tables. Current: "+n.db.version+", expected: "+n.dbVersion):log.debug("SqlProvider","SUCCESS: Successful upgrade of SQLite tables. Current: "+n.db.version+", expected: "+n.dbVersion))},n.prototype.sqlDo=function(n,t,i,r,u,f){var e=this;this.db.transaction(function(i){log.debug("SqlProvider","["+n+"] SQL executing: "+u),log.debug("SqlProvider","["+n+"] Keys: "+f);var r=i.executeSql(u,f,function(i,r){var u="NA",f="NA";try{r&&(u=r.rowsAffected.toString(),r.rows&&(f=r.rows.length.toString()))}catch(e){}log.debug("SqlProvider","["+n+"] SQL Rows affected: "+u+", rows returned: "+f),t&&t(i,r)})},function(t){log.debug("SqlProvider","["+n+'] SQL error: "'+u+'": Error: '+t.code+": "+t.message),i&&i(t)},function(){log.debug("SqlProvider","["+n+"] SQL Success: "+u),r&&r()})},n.prototype.sqlDoSimple=function(n,t,i){this.sqlDo(n,null,null,null,t,i)},n.prototype.sqlSettingsRemove=function(n,t){this.sqlDoSimple("SettingsRemove","DELETE FROM "+n+" WHERE key=?",[t]),this.sqlDoSimple("SettingsRemove","DELETE FROM "+n+" WHERE key=?",[t+".meta"])},n.prototype.sqlSettingsSet=function(n,t,i,r){this.sqlDoSimple("SettingsSet","DELETE FROM "+n+" WHERE key=?",[t]),this.sqlDoSimple("SettingsSet","INSERT OR IGNORE INTO "+n+" (key, value, meta) VALUES (?, ?, ?)",[t,i,r])},n.prototype.sqlSettingsRead=function(n){var i=this,t="SELECT * FROM "+n;this.sqlDo("SettingsRead",function(t,i){var u,r;if(!i||!i.rows){log.debug("SqlProvider","sqlSettingsRead: Empty table: "+n);return}for(u=i.rows.length,log.debug("SqlProvider","sqlSettingsRead: "+n+" table: "+u+" rows found."),r=0;r<u;r++){var f=i.rows.item(r).key,e=i.rows.item(r).value,o=i.rows.item(r).meta;log.debug("SqlProvider","SQL Row: "+r+" key: "+f+", value:  "+e.length+" bytes, meta: "+o),phoneGapInterop.wikitudePluginProvider.sendInterop.callJavaScript("phoneGapProvider.SqlCallbackSet('"+f+"', '"+e+"', '"+o+"')")}},function(n){n?(log.debug("SqlProvider",'sqlSettingsRead: Reporting error to app: SQL: "'+t+'": Error: '+n.code+": "+n.message),phoneGapInterop.wikitudePluginProvider.sendInterop.callJavaScript("phoneGapProvider.callbackSqlReadError('"+n.code+"', '"+n.message+"')")):phoneGapInterop.wikitudePluginProvider.sendInterop.callJavaScript("phoneGapProvider.callbackSqlReadError('', '')")},function(){log.debug("SqlProvider","sqlSettingsRead: Reporting success to app."),phoneGapInterop.wikitudePluginProvider.sendInterop.callJavaScript("phoneGapProvider.callbackSqlReadSuccess();")},t,[])},n}();n.SqlProvider=t})(n.InteropProviders||(n.InteropProviders={}));var t=n.InteropProviders})(PhoneGap||(PhoneGap={})),sqlProvider=new PhoneGap.InteropProviders.SqlProvider,startup.addLoad(function(){sqlProvider.Load()},"SqlProvider"),startup.addLoad(function(){sqlProvider.Init()},"SqlProvider")
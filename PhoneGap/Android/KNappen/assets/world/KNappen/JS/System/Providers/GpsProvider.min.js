var System,gpsProvider;(function(n){(function(t){var i=function(){function t(){this._this=$(this)}return t.prototype.PostInit=function(){var n=this;compatibilityInfo.hasAR||(navigator.geolocation?(log.debug("GpsProvider","Runtime environment supports GPS, will use."),this.readBrowserGpsPos(this),setInterval(function(){n.readBrowserGpsPos(n)},1e4)):log.debug("GpsProvider","Runtime environment doesn't support GPS."))},t.prototype.addPositionChangedHandler=function(n){this._this.on("PosChanged",n)},t.prototype.readBrowserGpsPos=function(n){navigator.geolocation.getCurrentPosition(function(t){var i=t.coords.latitude,r=t.coords.longitude,u=t.coords.altitude,f=t.coords.accuracy;n.setPos(i,r,u,f)},function(){log.debug("GpsProvider","Error getting GPS position from browser.")},{enableHighAccuracy:!0,timeout:6e4,maximumAge:6e4})},t.prototype.setPos=function(t,i,r,u,f,e,o,s){log.verboseDebug("GpsProvider","Received geolocation: Latitude: "+t+", Longitude: "+i+", Altitude: "+r+", Accuracy: "+u+", Altitude Accuracy: "+f+", Heading: "+e+", Speed: "+o+", Timestamp: "+s+""),this.lastPos=new n.Models.Position(t,i,r,u);var h=this.lastPos;this._this.trigger("PosChanged",[h])},t}();t.GpsProvider=i})(n.Providers||(n.Providers={}));var t=n.Providers})(System||(System={})),gpsProvider=new System.Providers.GpsProvider,startup.addPostInit(function(){gpsProvider.PostInit()})
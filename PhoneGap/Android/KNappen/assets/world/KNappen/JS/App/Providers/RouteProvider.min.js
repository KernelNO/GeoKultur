var App;(function(n){(function(t){var f=function(){function n(){this.id=ko.observable(""),this.name=ko.observable(""),this.version=ko.observable(1),this.pois=ko.observableArray(),this.id(stringUtils.mkGUID())}return n}(),i,r,u;t.RouteItem=f,i=function(){function n(){this.routes=ko.observableArray()}return n}(),t.RouteArray=i,r=function(){function t(){this.adminRoutes=new n.Providers.RouteProviderHelper("Admin"),this.userRoutes=new n.Providers.RouteProviderHelper("User"),this.searchRoutes=new n.Providers.RouteProviderHelper("Search")}return t}(),t.RouteProvider=r,u=function(){function t(t){this.prefix=t,this.routeArray=new n.Providers.RouteArray,this.fileName=null,this.fileName="Route."+this.prefix+".json"}return t.prototype.getRoutes=function(){return log.debug("RouteProvider","Returning "+this.routeArray.routes().length+" routes"),this.routeArray.routes()},t.prototype.findRouteByName=function(n){var t=null,i;return this.routeArray.routes().forEach(function(i){i.name()==n&&(t=i)}),i="Not found",t||(i="Found"),log.debug("RouteProvider","FindRoute: name: "+n+", status: "+i),t},t.prototype.findRouteById=function(n){var t=null,i;return this.routeArray.routes().forEach(function(i){i.id()==n&&(t=i)}),i="Not found",t||(i="Found"),log.debug("RouteProvider","FindRoute: id: "+n+", status: "+i),t},t.prototype.addRoute=function(n){this.removeRoute(n),log.debug("RouteProvider","Adding route: "+n.name()),this.routeArray.routes.push(n)},t.prototype.removeRoute=function(n){log.debug("RouteProvider","Removing route: "+n.name());var t=this.routeArray.routes().filter(function(t){return t.name().toString()!==n.name().toString()});this.routeArray.routes(t)},t.prototype.clearRoutes=function(){log.debug("RouteProvider","clearRoutes()"),this.routeArray.routes=ko.observableArray()},t.prototype.loadRoutes=function(){log.debug("RouteProvider",'Loading routes from filename "'+this.fileName+'"'),this.clearRoutes();try{serializer.deserializeKnockoutObjectFromFile(this.fileName,this.routeArray)}catch(t){log.error("RouteProvider",'Exception loading routes from filename "'+this.fileName+'": '+t)}$.each(this.routeArray.routes(),function(t,i){var r=ko.observableArray();$.each(i.pois(),function(t,i){var u=new n.Models.PointOfInterest;$.extend(u,i),u.pos=ko.observable(u.pos),r.push(u)}),i.pois=r})},t.prototype.saveRoutes=function(){log.debug("RouteProvider",'Saving routes to filename "'+this.fileName+'"');try{serializer.serializeKnockoutObjectToFile(this.fileName,this.routeArray)}catch(n){log.error("RouteProvider",'Exception saving routes to filename "'+this.fileName+'": '+n)}},t}(),t.RouteProviderHelper=u})(n.Providers||(n.Providers={}));var t=n.Providers})(App||(App={}))